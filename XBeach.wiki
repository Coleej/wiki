= Navigation =
== Files ==
[[file:~/Documents/20_manuals/XBeach_manual_kingsday.pdf|kingsday manual]]

== General ==
* All keywords refer to the convention in params.txt, not the matlab toolbox, unless otherwise specified.

== Numerical implementation ==
=== Wave action balance ===
* Finite volume method
	- Linear upwind scheme
		* Extrapolated the value at the cell boundary from two upwind cell center values.
		* Upwind direction determined by group velocity direction.
		* $O(Δ²)$ accuracy
		* limited numerical diffusion
		* may cause instability

== Model setup ==
=== Grids ===
==== Specifications ====
* There should be at least 12 points per [[IG waves|IG wave]] length at the boundary
	- Assume $T_{p,long} = 4 * T_{p,short}$ and that $n ≤ 0.8$ at the boundary
	- Compute $L_{long}$ with the [[dispersion relationship]]

==== Importing from Delft3D ====
* When importing the computational grid and bathymetry from Delft3D (QUICKIN and RGFGRID) use the following settings in params.txt
	- gridform = delft3d
	- depthfile = *.dep
	- xyfile = *.grd
* See [[McCall et al. (2014)]] for an example of a practical grid setup for a limited, alongshore uniform case.
	* Summarized in the weekly report [[file:~/Documents/05_meetings/10_research_group/2017-03-17/update.pdf|here]]
* When using the cyclic boundary conditions, the two rows of grid cells on each side of the domain must be identical

==== Generating curvilinear meshes ====
* A curvilinear Delft3D grid-file format still requires that the grid node (1,1) be at the offshore corner with $+n$ going in the alongshore direction, i.e. what is presented in the manual
	- Use splines to create the grid with the correct node at the origin of the grid-file
	- Steps:
		1. The first spline should begin near the origin and extend in the $+s$ direction
		2. The second spline should begin near the origin, cross the first spline, and extend in the $n$ direction
		3. The first crossings of the two splines will define the origin and the last intersections on the other two splines will define the (nx,1) and (1,ny) points, respectfully


=== Time evolution ===
* The time-step is determined by the given maximum CFL number (_keyword_ = *CFL*) which can be set in *params.txt*
	* default = 0.7 (0.1 - 0.9)

* _dtbc_ set the time step for the short-wave envelop generated series in seconds. This time step should be small enough to sufficiently resolve the bounded long waves.
	* Need not be as small as the model's time step

=== Directional grid ===
* The directional grid is independent of the main wave angle
 - It is easiest to specify in the same convention as the main wave angle (which for Jonswap must be meteorological).
	- If specified in Cartesian, then 0° points directly east

=== Dep file ===
* For XBeach the bed level and water depth are defined in the cell center.
	- If constructing grid and bathymetry manually, then when exporting depth files from QUICKIN, use the "Grid and Depth (ARC)" format to export the depths at the grid cell centers.
	- This option should not be used when setting the gridform to delft3d. In this case use the *.dep and *.grd generated by QUICKIN and RGFGRID, respectfully.

==== Bathymetry ====
* Rule of thumb: the depth at the offshore boundary needs to be $n = cg/c ≤ 0.8$ 

=== Waves ===
* keyword _wbctype_ sets the wave boundary condition type
	- When using _wbctype_=jons (ie using the jonswap spectrum), XBeach generates a random wave series. _dtbc_ set the time step for the generated series in seconds. This time step should be small enough to sufficiently resolve the bounded long waves.
* When specifying angles for the wave grid, the computational x-axis is taken as θ = 0 and positive is ccw.
	- The default is Cartesian, but nautical convention can be set with thetanaut=1
* Main angle (mainang) in jonswap file is always in _nautical_ convention.

=== Flow ===
* Flow boundary conditions are specified with the keywords _front_, _back_, _left_, and _right_.
	- These can take on a few different forms.
	- _Left_ and _Right_ refer to the alongshore BCs
		- For Neumann BC (called a no-gradient BC, but the manual indicates that it is a prescription of the along shore gradient) the water level gradient is calculated from the difference in water level BC's prescribed at the offshore corners.
	- In the matlab tool box these are part of the *settings* structure passed to xb_generate_model function.
